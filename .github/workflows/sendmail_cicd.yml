name: send_mail CI/CD
on:
  workflow_dispatch:
      
  # 要件1. masterにプルリクがマージされると起動する。
  push:
    branches:
      - master
      - feature/github-actions
  # 要件2. 指定のディレクトリの更新でのみ起動する。
    paths:
      - 'src/send_mail/*.py'
      - 'src/send_mail/*.txt'

env:
  AWS_REGION: "ap-northeast-1"
  AWS_ROLE_ARN: "${{ secrets.AWS_ROLE_ARN }}"

jobs:
  test-and-deploy:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          flake8 --max-line-length 120
      - name: Test with pytest
        run: |
          pytest
      - name: aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: set env(product)
        if: github.ref == 'refs/heads/master'
        run: echo 'ENVIRONMENT=product' >> $GITHUB_ENV
      - name: set env(staging)
        if: contains(github.ref, 'feature')
        run: echo 'ENVIRONMENT=staging' >> $GITHUB_ENV
      # 要件5. アップロードすべきファイルをZipで圧縮し、S3にPUTする。
      # 要件6. Lambda関数にアップロードする。関数バージョンも同時に作成する。
      # 要件7. エイリアスをLATESTに更新する。
      - name: deploy to lambda
        run: cd src/send_mail && bash ./upload.sh $ENVIRONMENT
      # 要件8. 結果を通知する。
      - name: Slack notification of success
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_COLOR: good 
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Deploy success.'
          SLACK_TITLE: GitHub Actions Notification
      # ※ 失敗でも通知する
      - name: Slack notification of failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_COLOR: danger
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Deploy failed...'
          SLACK_TITLE: GitHub Actions Notification
